{
  "useReducer for modal": {
    "prefix": "reducer",
    "body": [
      "interface State {",
      "  modalExample: boolean;",
      "}",
      "",
      "export enum ModalAction {",
      "  EXAMPLE = 'action-example',",
      "  CLOSE = 'close',",
      "}",
      "",
      "export interface Action {",
      "  type: ModalAction;",
      "}",
      "",
      "const initialState = {",
      "  modalExample: false,",
      "};",
      "",
      "const [state, dispatch] = useReducer((state: State, action: Action) => {",
      "  switch (action.type) {",
      "    case ModalAction.EXAMPLE:",
      "      return {",
      "        modalExample: true,",
      "      };",
      "    case ModalAction.CLOSE:",
      "      return {",
      "        modalExample: initialState.modalExample,",
      "      };",
      "",
      "    default:",
      "      return state;",
      "  }",
      "}, initialState);"
    ],
    "description": "useReducer for modal"
  }
}
