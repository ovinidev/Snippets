{
  "useReducer": {
    "prefix": "reducer",
    "body": [
      "interface State {",
      "  modalApprove: boolean;",
      "  modalDisapprove: boolean;",
      "  modalImage: boolean;",
      "}",
      "",
      "export enum ModalAction {",
      "  APPROVE = 'approve',",
      "  DISAPPROVE = 'disapprove',",
      "  CLOSE = 'close',",
      "  IMAGE = 'image',",
      "}",
      "",
      "export interface Action {",
      "  type: ModalAction;",
      "}",
      "",
      "const initialState = {",
      "  modalApprove: false,",
      "  modalDisapprove: false,",
      "  modalImage: false,",
      "};",
      "",
      "const [state, dispatch] = useReducer((state: State, action: Action) => {",
      "  switch (action.type) {",
      "    case ModalAction.APPROVE:",
      "      return {",
      "        modalApprove: true,",
      "        modalDisapprove: false,",
      "        modalImage: false,",
      "      };",
      "    case ModalAction.DISAPPROVE:",
      "      return {",
      "        modalDisapprove: true,",
      "        modalApprove: false,",
      "        modalImage: false,",
      "      };",
      "    case ModalAction.IMAGE:",
      "      return {",
      "        modalImage: true,",
      "        modalApprove: false,",
      "        modalDisapprove: false,",
      "      };",
      "    case ModalAction.CLOSE:",
      "      return {",
      "        modalApprove: initialState.modalApprove,",
      "        modalDisapprove: initialState.modalDisapprove,",
      "        modalImage: initialState.modalImage,",
      "      };",
      "",
      "    default:",
      "      return state;",
      "  }",
      "}, initialState);"
    ],
    "description": "useReducer"
  }
}
